{"remainingRequest":"D:\\Code\\WzhProject\\bilisys\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\WzhProject\\bilisys\\src\\components\\searchPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Code\\WzhProject\\bilisys\\src\\components\\searchPage.vue","mtime":1648382261290},{"path":"D:\\Code\\WzhProject\\bilisys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647854279501},{"path":"D:\\Code\\WzhProject\\bilisys\\node_modules\\babel-loader\\lib\\index.js","mtime":1647854279495},{"path":"D:\\Code\\WzhProject\\bilisys\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647854279501},{"path":"D:\\Code\\WzhProject\\bilisys\\node_modules\\vue-loader\\lib\\index.js","mtime":1647854303675}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["searchPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"searchPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <h1>数据库内容展示</h1>\r\n    <!-- input部分 -->\r\n    <el-row style=\"padding-bottom: 2%\" id=\"input\">\r\n      <el-col :span=\"8\" :offset=\"8\">\r\n        <el-input\r\n          class=\"inputStyle\"\r\n          v-model=\"input\"\r\n          size=\"medium\"\r\n          placeholder=\"输入想要查询的标签或者bv\"\r\n          @keyup.enter.native=\"search\"\r\n        ></el-input\r\n      ></el-col>\r\n    </el-row>\r\n    <!-- 浏览数据库内容的按钮 -->\r\n    <el-row id=\"infoButtons\">\r\n      <el-button type=\"primary\" round @click=\"tname\">tname</el-button>\r\n      <el-button type=\"success\" round @click=\"userTag\">userTag</el-button>\r\n      <el-button type=\"info\" round @click=\"k400Tags\">K400</el-button>\r\n    </el-row>\r\n    <!-- 展示tags -->\r\n    <el-row class=\"myBox\" id=\"showingTags\" v-show=\"shwoComponents.tagGroup\">\r\n      <el-badge\r\n        :value=\"item[1]\"\r\n        :max=\"990000\"\r\n        class=\"item\"\r\n        v-for=\"(item, i) in tagAreaContent\"\r\n        :key=\"i\"\r\n        style=\"padding: 1%\"\r\n      >\r\n        <el-button size=\"small\" @click=\"refreshWaitingBvs(item[0])\">{{\r\n          item[0]\r\n        }}</el-button>\r\n      </el-badge>\r\n    </el-row>\r\n    <!-- 展示videoList部分 -->\r\n    <el-row id=\"showVideoList\" v-show=\"shwoComponents.videoList\">\r\n      <el-col :span=\"16\" :offset=\"4\">\r\n        <!-- <p v-for=\"(item,i) in temVideoInfos\" :key=\"i\">\r\n          {{item[\"_id\"]}}\r\n        </p> -->\r\n        <el-table :data=\"videoTableData\" stripe style=\"width: 100%\">\r\n          <el-table-column prop=\"bv\" label=\"视频编号\"> </el-table-column>\r\n          <el-table-column prop=\"title\" label=\"视频名称\"> </el-table-column>\r\n          <el-table-column prop=\"src\" label=\"视频地址\">\r\n            <!-- eslint-disable-next-line -->\r\n            <template slot-scope=\"scope\">\r\n              <video\r\n                :src=\"scope.row.src\"\r\n                height=\"100px\"\r\n                width=\"200px\"\r\n                controls=\"controls\"\r\n              ></video>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"buttonInput\" label=\"视频具体信息\">\r\n            <!-- eslint-disable-next-line -->\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                type=\"info\"\r\n                plain\r\n                @click=\"showOneVideoInfo(scope.row.buttonInput)\"\r\n                >点击查看</el-button\r\n              >\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <el-pagination\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page.sync=\"currentPage\"\r\n          :page-size=\"1\"\r\n          layout=\"prev, pager, next, jumper\"\r\n          :total=\"waitingBvs.length\"\r\n        >\r\n        </el-pagination>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 展示一个videoDeital部分 -->\r\n    <div id=\"oneVideoInfo\" v-show=\"shwoComponents.videoInfo\">\r\n      <el-row>\r\n        <el-col :span=\"16\" :offset=\"4\">\r\n          <h3 v-if=\"showingOneVideoInfo['baseInfo']\">\r\n            {{ showingOneVideoInfo[\"baseInfo\"][\"title\"] }}\r\n          </h3>\r\n          <video\r\n            :src=\"oneVideoUrl\"\r\n            height=\"400px\"\r\n            width=\"auto\"\r\n            controls=\"controls\"\r\n          ></video>\r\n          <el-table :data=\"oneVideoTags\" stripe style=\"width: 100%\">\r\n            <el-table-column\r\n              prop=\"k400tags\"\r\n              label=\"k400标签\"\r\n              width=\"180\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"clipTags\"\r\n              label=\"clip标签\"\r\n              width=\"180\"\r\n            ></el-table-column>\r\n            <el-table-column\r\n              prop=\"captions\"\r\n              label=\"句词池生成的数据\"\r\n              width=\"780\"\r\n            ></el-table-column>\r\n          </el-table>\r\n          <!-- {{}} -->\r\n          <el-button type=\"info\" plain @click=\"info2List()\" style=\"margin: 1%\"\r\n            >返回列表</el-button\r\n          >\r\n        </el-col>\r\n      </el-row>\r\n      <el-row>\r\n        <el-col :span=\"6\">\r\n          基本信息\r\n          <div style=\"overflow: scroll; height: 300px\">\r\n            <!-- {{showingOneVideoInfo['baseInfo']}} -->\r\n            <json-viewer :value=\"showingOneVideoInfo['baseInfo']\"></json-viewer>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          弹幕\r\n          <div style=\"overflow: scroll; height: 300px\">\r\n            <json-viewer\r\n              :value=\"showingOneVideoInfo['danmaku']\"\r\n              expand-depth=\"2\"\r\n            ></json-viewer>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          评论\r\n          <div style=\"overflow: scroll; height: 300px\">\r\n            <json-viewer :value=\"showingOneVideoInfo['comment']\"></json-viewer>\r\n          </div>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          标签\r\n          <div style=\"overflow: scroll; height: 300px\">\r\n            <json-viewer :value=\"showingOneVideoInfo['tags']\"></json-viewer>\r\n          </div>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n// import tagArea from \"./tagArea.vue\"\r\nexport default {\r\n  name: \"searchPage\",\r\n  components: {\r\n    // tagArea,\r\n  },\r\n  data() {\r\n    return {\r\n      input: \"\",\r\n      shwoComponents: {\r\n        tagGroup: true,\r\n        videoList: false,\r\n        videoInfo: false,\r\n      },\r\n      tags: [],\r\n      tnames: [],\r\n      k400s: [],\r\n      url: \"http://10.77.110.150:10008\",\r\n      tagAreaContent: [], //<!-- 展示tags -->部分的数据\r\n      showTags: [],\r\n      showTagSource: \"\",\r\n      waitingBvs: [],//videoList表格中的列表\r\n      currentPage: 1,//控制翻页，记录当前的页数\r\n      temVideoInfos: [], //记录现在展示的5个视频的总特征\r\n      showingOneVideoInfo: {},//展示一个视频的具体信息\r\n      oneVideoTags: {},//一个视频所含有标签所构成表格的信息来源\r\n    };\r\n  },\r\n  methods: {\r\n    // 得到一个视频需要展示的部分\r\n    getoneVideoTags() {\r\n      let temData = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        let temdict = {};\r\n        temdict[\"captions\"] =\r\n          this.showingOneVideoInfo[\"Captions\"][i][\"content\"];\r\n        temdict[\"clipTags\"] = this.showingOneVideoInfo[\"CazTags\"][i];\r\n        temdict[\"k400tags\"] = this.showingOneVideoInfo[\"K400Tags\"][i];\r\n        temData.push(temdict);\r\n      }\r\n      return temData;\r\n    },\r\n    // 展示一个视频的具体信息\r\n    showOneVideoInfo(index) {\r\n      // index的含义指的是这个video在temVideoInfos中所占的位置\r\n      console.log(this.temVideoInfos[index]);\r\n      // this.showingOneVideoInfo = {};\r\n      this.showingOneVideoInfo = this.temVideoInfos[index];\r\n      this.showingOneVideoInfo[\"index\"] = index;\r\n      console.log(this.showingOneVideoInfo);\r\n      this.oneVideoTags = this.getoneVideoTags();\r\n      this.shwoComponents.videoInfo = true;\r\n      this.shwoComponents.videoList = false;\r\n    },\r\n    // 视频页面的返回函数\r\n    info2List() {\r\n      this.shwoComponents.videoInfo = false;\r\n      this.shwoComponents.videoList = true;\r\n    },\r\n    // 点击翻页时候的处理函数\r\n    handleCurrentChange() {\r\n      console.log(this.currentPage);\r\n      this.getVideoDetailInfo(this.waitingBvs[this.currentPage - 1]);\r\n    },\r\n    // 获取一个array的video中的所有信息\r\n    getVideoDetailInfo(videNames) {\r\n      console.log(videNames);\r\n      this.temVideoInfos = [];\r\n      for (let i = 0; i < videNames.length; i++) {\r\n        axios.get(`${this.url}/info/${videNames[i]}`).then((response) => {\r\n          this.temVideoInfos.push(response.data);\r\n        });\r\n      }\r\n    },\r\n\r\n    // 点击tag获取videoinfos\r\n    refreshWaitingBvs(data) {\r\n      // 展示表格\r\n      this.shwoComponents.tagGroup = false;\r\n      this.shwoComponents.videoList = true;\r\n      console.log(`${this.url}/content/video/${this.showTagSource}/${data}`);\r\n      axios\r\n        .get(`${this.url}/content/video/${this.showTagSource}/${data}`)\r\n        .then((response) => {\r\n          this.waitingBvs = [];\r\n          for (let i = 0; i < response.data.length; i++) {\r\n            this.waitingBvs.push(response.data[i]);\r\n          }\r\n          console.log(this.waitingBvs);\r\n          // console.log(this.waitingBvs);\r\n          this.getVideoDetailInfo(this.waitingBvs[0]);\r\n        });\r\n    },\r\n    // 搜索的配套函数\r\n    search() {\r\n      console.log(this.input);\r\n      //检查搜索视频是否根据bv符号\r\n      if (this.input.startsWith(\"BV\")) {\r\n        // let temReult = []\r\n        axios.get(`${this.url}/info/${this.input}`).then((response) => {\r\n          console.log(response.data);\r\n          if (!response.data[\"canFind\"]) {\r\n            // 声明一个警告\r\n            console.log(\"无法查新\");\r\n            this.bvFailed();\r\n            return;\r\n          } else {\r\n            this.showingOneVideoInfo = response.data;\r\n            this.shwoComponents[\"index\"] = 0;\r\n            this.oneVideoTags = this.getoneVideoTags();\r\n            this.shwoComponents.videoInfo = true;\r\n            this.shwoComponents.videoList = false;\r\n            this.shwoComponents.tagGroup = false;\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      console.log(`${this.url}/search/tags/${this.input}`);\r\n      // 首先假设根据tags\r\n      axios.get(`${this.url}/search/tags/${this.input}`).then((response) => {\r\n        this.tagAreaContent = [];\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          this.tagAreaContent.push(response.data[i]);\r\n        }\r\n        this.tagAreaContent.concat(response.data);\r\n        this.shwoComponents.tagGroup = true;\r\n        this.shwoComponents.videoList = false;\r\n        this.shwoComponents.videoInfo = false;\r\n        this.showTagSource = \"userTag\";\r\n        console.log(this.tagAreaContent);\r\n        // 缺少搜索成功的提示\r\n        this.open2();\r\n      });\r\n    },\r\n    // 搜索成功的弹窗\r\n    open2() {\r\n      this.$message({\r\n        message: \"搜索成功\",\r\n        type: \"success\",\r\n      });\r\n    },\r\n    // 搜索bv搜索不到带来的弹窗\r\n    bvFailed() {\r\n      this.$message.error(\"数据库中没有这个bv\");\r\n    },\r\n    // 点击tname的时候\r\n    tname() {\r\n      this.currentPage = 1;\r\n      this.shwoComponents.tagGroup = true;\r\n      this.shwoComponents.videoList = false;\r\n      this.shwoComponents.videoInfo = false;\r\n      this.showTagSource = \"tname\";\r\n      console.log(\"获取后台的分区\");\r\n      // console.log(this.tnames)\r\n      this.tagAreaContent = [];\r\n      for (let i = 0; i < this.tnames.length; i++) {\r\n        this.tagAreaContent.push(this.tnames[i]);\r\n      }\r\n    },\r\n    // 点击userTag\r\n    userTag() {\r\n      this.currentPage = 1;\r\n      this.shwoComponents.tagGroup = true;\r\n      this.shwoComponents.videoList = false;\r\n      this.shwoComponents.videoInfo = false;\r\n      console.log(\"输入用户的标签\");\r\n      (this.showTagSource = \"userTag\"), (this.tagAreaContent = []);\r\n      for (let i = 0; i < 100; i++) {\r\n        this.tagAreaContent.push(\r\n          this.tags[Math.floor(Math.random() * this.tags.length)]\r\n        );\r\n      }\r\n    },\r\n    // 点击k400\r\n    k400Tags() {\r\n      this.currentPage = 1;\r\n      this.shwoComponents.tagGroup = true;\r\n      this.shwoComponents.videoList = false;\r\n      this.shwoComponents.videoInfo = false;\r\n      console.log(\"获取k400标签\");\r\n      this.showTagSource = \"k400\";\r\n      this.tagAreaContent = [];\r\n      console.log(this.k400s)\r\n      for (let i = 0; i < 90; i++) {\r\n        this.tagAreaContent.push(\r\n          this.k400s[Math.floor(Math.random() * this.k400s.length)]\r\n        );\r\n      }\r\n    },\r\n  },\r\n  // 创建的时候获取数据\r\n  created() {\r\n    axios.get(`${this.url}/content/tname`).then((response) => {\r\n      this.tnames = response.data;\r\n    });\r\n    axios.get(`${this.url}/content/tags`).then((response) => {\r\n      this.tags = response.data;\r\n    });\r\n    axios.get(`${this.url}/content/K400`).then((response) => {\r\n      this.k400s = response.data;\r\n    });\r\n    console.log(\"数据获取完成\");\r\n    // this.temVideoInfos = [\r\n    //   { baseInfo: { title: \"xxx\" }, _id: \"BV1gk4y1y7Tm\", bv: \"BV1gk4y1y7Tm\" },\r\n    // ];\r\n    // this.oneVideoTags = {\r\n    //   captions: [],\r\n    //   clipTags: [],\r\n    //   k400tags: [],\r\n    // };\r\n    // 获取waitingBvs\r\n    // this.showTagSource = \"userTag\"\r\n    // this.refreshWaitingBvs(\"熊猫\")\r\n    // this.getVideoDetailInfo(this.waitingBvs[0])\r\n    // console.log(this.temVideoInfos)\r\n    // this.showOneVideoInfo(0)\r\n  },\r\n  computed: {\r\n    // videList展示的数据\r\n    videoTableData: function () {\r\n      let temData = [];\r\n      for (let i = 0; i < this.temVideoInfos.length; i++) {\r\n        let temdict = {};\r\n        temdict[\"title\"] = this.temVideoInfos[i][\"baseInfo\"][\"title\"];\r\n        temdict[\"bv\"] = this.temVideoInfos[i][\"_id\"];\r\n        temdict[\"src\"] = `${this.url}/static/Video/${temdict[\"bv\"]}.mp4`;\r\n        temdict[\"buttonInput\"] = i;\r\n        temData.push(temdict);\r\n      }\r\n      return temData;\r\n    },\r\n    oneVideoUrl: function () {\r\n      let bv = this.showingOneVideoInfo[\"_id\"];\r\n      return `${this.url}/static/Video/${bv}.mp4`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.myBox {\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n  padding-top: 1%;\r\n}\r\n.scrollbar-demo-item {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 50px;\r\n  margin: 10px;\r\n  text-align: center;\r\n  border-radius: 4px;\r\n  background: var(--el-color-primary-light-9);\r\n  color: var(--el-color-primary);\r\n}\r\n</style>"]}]}